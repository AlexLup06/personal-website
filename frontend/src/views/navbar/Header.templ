package navbar

import (
	"alexlupatsiy.com/personal-website/frontend/src/views/components"
	"context"
)

templ Header() {
	<header class="h-24 flex justify-between md:justify-normal items-center w-full absolute top-0 lg:px-20 md:px-12 sm:px-8 px-4">
		<img class="w-12 md:mr-20" src="/public/images/memoji.png"/>
		<nav id="navbar" class="flex md:flex-1 lg:gap-14 md:gap-8 gap-4 items-center">
			@NavLink("/", "HOME")
			@NavLink("/portfolio", "PORTFOLIO")
			@NavLink("/blog", "BLOG")
		</nav>
		<div class="hidden md:flex md:gap-3 gap-2">
			@SocialLink("https://www.linkedin.com/in/alex-lupatsiy-2730b41b5/") {
				@components.LinkedIn()
			}
			@SocialLink("https://github.com/AlexLup06") {
				@components.Github()
			}
			@SocialLink("/") {
				@components.Twitter()
			}
		</div>
		<div id="socials-dd" class="pb-1 md:hidden relative">
			<details class="dropdown dropdown-end bg-none">
				<summary tabindex="0" role="button" class="h-10 m-3 bg-none">
					@components.AtSymbol()
				</summary>
				<ul tabindex="0" class="dropdown-content bg-base-100 rounded-lg z-[1] flex flex-col gap-3 p-3 shadow">
					@SocialLink("https://www.linkedin.com/in/alex-lupatsiy-2730b41b5/") {
						@components.LinkedIn()
					}
					@SocialLink("https://github.com/AlexLup06") {
						@components.Github()
					}
					@SocialLink("/") {
						@components.Twitter()
					}
				</ul>
			</details>
		</div>
	</header>
}

func activeLinkStyles(c context.Context, link string) string {
	if isActive(c, link) == "true" {
		return "underline"
	}
	return ""
}

func isActive(c context.Context, link string) string {
	path := c.Value("fullPath").(string)
	if path == link {
		return "true"
	}
	return "false"
}

templ NavLink(link string, text string) {
	<a
		class="
			after:content-[''] after:w-0 after:h-1 after:block after:absolute after:text-xl after:border-b-2 after:border-black  after:transition-all after:duration-300
			hover:after:w-full
			after:data-[active=true]:w-full
			relative
			cursor-pointer md:text-xl md:font-medium
		"
		data-active={ isActive(ctx, link) }
		data-path={ link }
		data-text={ text }
		hx-get={ link }
		hx-target="#body-section"
		hx-replace-url="true"
	>
		{ text }
	</a>
}

templ SocialLink(link string) {
	<a
		href={ templ.SafeURL(link) }
		class="flex w-10 h-10 rounded-md overflow-hidden"
		target="blank"
	>
		{ children... }
	</a>
}
